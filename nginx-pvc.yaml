---
## yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/pod.json
# apiVersion: v1
# kind: Pod
# metadata:
#   name: task-pv-pod
#   labels:
#     name: nginx-pvc
# spec:
#   volumes:
#     - name: task-pv-storage
#       persistentVolumeClaim:
#         claimName: task-pv-claim
#   containers:
#     - name: task-pv-container
#       image: nginx:latest
#       imagePullPolicy: IfNotPresent
#       ports:
#         - containerPort: 80
#           name: "http-server"
#       volumeMounts:
#         - mountPath: "/usr/share/nginx/html"
#           name: task-pv-storage
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/persistentvolume.json
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv0001
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 5Gi
  hostPath:
    path: /home/tablinux/kube/pv/pv0001

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/persistentvolume.json
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv0002
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 10Gi
  hostPath:
    path: /home/tablinux/kube/pv/pv0002

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/persistentvolume.json
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: task-pv-volume
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: "/home/tablinux/kube/pv/pv3"
  storageClassName: manual

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/persistentvolumeclaim.json
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: manual
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/deployment.json
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web
  name: nginx-deployment
spec:
  replicas: 5
  selector:
    matchLabels:
      app: web
  strategy:
    type: RollingUpdate
 
  template:
    metadata:
      labels:
        app: web
      name: nginx-deployment-pod
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: IfNotPresent
        name: task-pv-container
        ports:
        - containerPort: 80
          name: "http-server"
        resources:
          limits:
            cpu: "500m"
            memory: "128Mi"
          requests: 
            cpu: "250m"
            memory: "64Mi"
        volumeMounts:
          - mountPath: "/usr/share/nginx/html"
            name: task-pv-storage
      volumes:
      - name: task-pv-storage
        persistentVolumeClaim:
          claimName: task-pv-claim

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/service.json
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: web
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: nginx-service
                port:
                  number: 80
            path: /hostname
            pathType: Prefix

